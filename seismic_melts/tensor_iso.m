function [CSTeff, rho] = tensor_iso(ebsd, CT, phase_names, melt, bound)
% tensor_iso.m - A. L. Lee
% Calculates stiffness tensor and density for the no fabric model.
% 
%   This function gives the stiffness tensor (CSTeff) produced by the
%   no fabric model. This model evenly distributes melt in an isotropic 
%   solid framework and calculates the aggregate Voigt/Reuss tensor at the 
%   different melt fractions.
%
%   INPUT
%   ebsd - EBSD variable as generated by MTEX
%   CT - The Voigt or Reuss tensor for the individual phases in the sample 
%   as calculated by the c_tensor_VRH function
%   phase_names - Phases present in the sample, generated at the same time
%   as the EBSD variable
%   melt - Specified melt fraction
%   bound - Voigt or Reuss
%   
%   OUTPUT
%   CSTeff - MTEX stiffness tensor
%   rho - aggregate density
%
%   Please direct all questions to A. L. Lee
%
%   
%% ***********************************************************************
%

% Calculating aggregate tensors and densities

% Calculating the aggregate C matrix and density for the specified melt
[C_matrix, rho_agg, C_incl, rho_melt] = ...
                    VRH_agg_melt('ISO',ebsd, CT, phase_names, melt, bound);

% Calculating the bulk and shear moduli for the solid rock and melt
[ K_vrh_mat, G_vrh_mat] = MS_polyaverage(C_matrix);
[ K_vrh_incl, G_vrh_incl] = MS_polyaverage(C_incl);

% Calculating the isotropic matrices for the solid rock and melt inclusion
C_agg = MS_build_isotropic('k',K_vrh_mat,'mu',G_vrh_mat);
C_melt = MS_build_isotropic('k',K_vrh_incl,'mu',G_vrh_incl);

% Calculating the aggregate C tensor and density from proportions of the
% solid and melt
if strcmp(bound, 'Reuss')
    CTeff = tensor((inv(C_agg)*(1-melt)) + (inv(C_melt)*melt));
    CTeff = inv(CTeff);
else
    CTeff = tensor((C_agg*(1-melt)) + (C_melt*melt));
    CMeff = (C_agg*(1-melt)) + (C_melt*melt);
end
rho = (rho_agg*(1-melt)) + (rho_melt*melt);

%% Converting to stiffness tensor

% Aggregate crystal symmetry
cs = crystalSymmetry('C1');
% Sriffness tensor
CSTeff = stiffnessTensor(CMeff,cs,'density',rho);

% End of function
end