function [CSTeff, rho] = tensor_shp(ebsd, C_Voigt, phase_names, melt, del, orientation, bound)
% tensor_shp.m - A. L. Lee
% Calculates stiffness tensor and density for the shape fabric model.
% 
%   This function gives the stiffness tensor (CSTeff) produced by the
%   shape fabric model. This model takes into account the melt shape and 
%   calculates the aggregate Voigt/Reuss tensor at the different melt 
%   fractions. Melt shape is specified here and calculated according to 
%   Tandon and Weng (1984).
%
%   INPUT
%   ebsd - EBSD variable as generated by MTEX
%   CT - The Voigt or Reuss tensor for the individual phases in the sample 
%   as calculated by the c_tensor_VRH function.
%   phase_names - Phases present in the sample, generated at the same time
%   as the EBSD variable
%   melt - Specified melt fraction
%   del - melt shape: oblate  < 1
%                     sphere  = 1
%                     prolate > 1
%   orientation - specify the orientation of the melt inclusions:
%                 horizontal inclusions: for del < 1, orientation = 90
%                                        for del > 1, orientation = 0
%                 vertical inclusions:   for del < 1, orientation = 0
%                                        for del > 1, orientation = 90
%   bound - Voigt or Reuss
%   
%   OUTPUT
%   CSTeff - MTEX stiffness tensor
%   rho - aggregate density
%
%   Please direct all questions to A. L. Lee
%
%   
%% ***********************************************************************
%

% Calculating aggregate tensors and densities

%% Calculating aggregate tensors and densities

% Calculating the aggregate C matrix and density for the specified melt
[C_matrix, rho_agg, C_incl, rho_melt] = VRH_agg_melt('SHP',ebsd,...
    C_Voigt, phase_names, melt(1), bound);

% Calculating the bulk and shear moduli for the solid rock and melt
[ K_vrh_mat, G_vrh_mat] = MS_polyaverage(C_matrix);
[ K_vrh_incl, G_vrh_incl] = MS_polyaverage(C_incl);

% Calculating the isotropic matrices for the solid rock and melt inclusion
C_agg = MS_build_isotropic('k',K_vrh_mat,'mu',G_vrh_mat);
C_melt = MS_build_isotropic('k',K_vrh_incl,'mu',G_vrh_incl);

% Calculating the aggregate C matrix and density for the specified melt.
% Melt shape is specified here and calculated according to Tandon and Weng
[Ceff,rho] = MS_effective_medium('t&w',C_agg,rho_agg,...
    C_melt,rho_melt,del,melt);

% Matrix is converted to a tensor
[~,s] = size(orientation);
if s == 1
    Ceff = MS_rot3(Ceff,0,0,orientation);
else
    Ceff = MS_rot3(Ceff,orientation(1),orientation(2),orientation(3));
end

% Matrix is converted to a tensor
% Aggregate crystal symmetry
cs = crystalSymmetry('C1');
% Sriffness tensor
CSTeff = stiffnessTensor(Ceff,cs,'density',rho);


% End of function
end