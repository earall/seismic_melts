function [CSTeff, rho] = tensor_cpo(ebsd, C_Voigt, phase_names, melt, bound)
% tensor_cpo.m - A. L. Lee
% Calculates stiffness tensor and density for the crystal fabric model.
% 
%   This function gives the stiffness tensor (CSTeff) produced by the
%   crystal fabric model. This model evenly distributes melt in an 
%   anisotropic solid framework and calculates the aggregate Voigt/Reuss 
%   tensor at the different melt fractions.
%
%   INPUT
%   ebsd - EBSD variable as generated by MTEX
%   CT - The Voigt or Reuss tensor for the individual phases in the sample 
%   as calculated by the c_tensor_VRH function
%   phase_names - Phases present in the sample, generated at the same time
%   as the EBSD variable
%   melt - Specified melt fraction
%   bound - Voigt or Reuss
%   
%   OUTPUT
%   CSTeff - MTEX stiffness tensor
%   rho - aggregate density
%
%   Please direct all questions to A. L. Lee
%
%   
%% ***********************************************************************
%

% Calculating aggregate tensors and densities

%% Calculating aggregate tensors and densities

% Calculating the aggregate C matrix and density for the specified melt
[Ceff, rho] = VRH_agg_melt('CPO', ebsd, C_Voigt, phase_names, melt, bound);

%% Matrix is converted to a tensor

% Aggregate crystal symmetry
cs = crystalSymmetry('C1');
% Sriffness tensor
CSTeff = stiffnessTensor(Ceff,cs,'density',rho);

% End of function
end